name: Continuous Integration

on:
  push:
    branches: [main, staging, dev]
  pull_request:
    branches: [main, staging, dev]

env:
  NODE_VERSION: '20.x'

jobs:
  # Job 1: Code Quality and Security
  code-quality:
    name: Code Quality & Security
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run ESLint with annotations
        run: |
          echo "::group::ESLint Analysis"
          npx eslint . --format json --output-file eslint-results.json || true
          npx eslint . || {
            echo "::error::ESLint found issues. Run 'npm run lint:fix' to fix automatically fixable issues."
            exit 1
          }
          echo "::endgroup::"
          
      - name: Run Prettier check
        run: |
          echo "::group::Prettier Format Check"
          npm run format:check || {
            echo "::error::Formatting issues detected. Run 'npm run format' to fix."
            exit 1
          }
          echo "::endgroup::"
          
      - name: Check for security vulnerabilities
        run: |
          echo "::group::Security Audit"
          npm audit --audit-level=moderate || {
            echo "::warning::Security vulnerabilities found. Run 'npm audit fix' to attempt fixes."
          }
          echo "::endgroup::"
          
      - name: Upload ESLint results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: eslint-results
          path: eslint-results.json
          retention-days: 30

  # Job 2: Build Verification
  build:
    name: Build Verification
    runs-on: ubuntu-latest
    needs: code-quality
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci --only=production
        
      - name: Build summary
        run: |
          echo "## 🏗️ Build Verification" >> $GITHUB_STEP_SUMMARY
          echo "✅ Application build completed successfully" >> $GITHUB_STEP_SUMMARY
          echo "- Production dependencies installed correctly" >> $GITHUB_STEP_SUMMARY
